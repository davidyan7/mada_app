{"version":3,"sources":["assets/sound.mp3","firebase.js","services/CitiesService.js","services/CitiesWasAlertService.js","components/search.jsx","components/AddTutorial.js","components/TutorialsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","ref","data","push","key","child","remove","Search","props","useState","query","setQuery","setSelectedItem","filteredData","filter","item","name","toLowerCase","includes","className","type","value","onChange","e","target","placeholder","map","onClick","citiesToAlert","handleItemClick","cities","require","AddTutorial","initialTutorialState","published","id","name_en","zone","zone_en","time","time_en","countdown","lat","lng","setSubmitted","setcitiesToAlert","Audio","alarm","useEffect","newCityToAlert","Math","random","setTimeout","city","index","idx","findIndex","splice","deleteCity","forEach","element","CitiesWasService","CitiesDataService","then","catch","console","log","TutorialsList","setCurrentTutorial","setCurrentIndex","checkIndex","setCheckIndex","alarmAudio","useList","tutorials","loading","error","cityWasAlert","deleteTutorial","refreshList","getColor","num","length","pause","currentTime","nopromise","Function","play","tutorial","val","App","href","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,mC,ovwbCc3CC,gBAXa,CACXC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4EACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAKFR,mBCdTS,EAAKT,EAASU,IAAI,kBA2BT,EAzBA,WACb,OAAOD,GAwBM,EArBA,SAACE,GACd,OAAOF,EAAGG,KAAKD,IAoBF,EAbA,SAACE,GACd,OAAOJ,EAAGK,MAAMD,GAAKE,UCfjBN,EAAKT,EAASU,IAAI,mBAsBT,EApBA,WACb,OAAOD,GAmBM,EAhBA,SAACE,GACd,OAAOF,EAAGG,KAAKD,IAeF,EAJG,WAChB,OAAOF,EAAGM,UCnBCC,EAAS,SAACC,GAAW,IAAD,EACLC,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,OAESF,mBAAS,MAFlB,mBAEVG,GAFU,WAIzBC,EAAeL,EAAMN,KAAKY,QAAO,SAACC,GAAD,OACrCA,EAAKC,KAAKC,cAAcC,SAASR,EAAMO,kBASzC,OACE,yBAAKE,UAAU,SACb,2BACEC,KAAK,OACLC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAOH,QACnCI,YAAY,mCAUd,4BACGZ,EAAaa,KAAI,SAACX,GAAD,OAChB,wBAAIX,IAAKW,EAAKM,MAAOM,QAAS,kBAxBd,SAACZ,GACvBH,EAAgBG,GAChBP,EAAMoB,cAAcb,GAsBsBc,CAAgBd,KACjDA,EAAKC,Y,iBC9Bdc,EAASC,EAAQ,IAqGNC,EAjGK,WAClB,IAAMC,EAAuB,CAC1B7B,IAAK,KACN8B,WAAW,EACXC,GAAG,GACHnB,KAAM,GACNoB,QAAS,GACTC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,QAAS,GACTC,UAAW,EACXC,IAAK,EACLC,IAAK,EACLtB,MAAO,IAde,EAgBQZ,mBAASwB,GAhBjB,gCAiBUxB,oBAAS,IAjBnB,mBAiBNmC,GAjBM,aAkBkBnC,mBAAS,IAlB3B,mBAkBjBmB,EAlBiB,KAkBFiB,EAlBE,OAoBOpC,mBAAU,IAAIqC,MAAMC,MApB3B,6BAmCxBC,qBAAU,cAEP,CAACpB,IAiCJ,OACE,yBAAKT,UAAU,SACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CAAQS,cAnDiB,SAACqB,GAC9BA,EAAed,GAAKe,KAAKC,OAAO,KAEhCC,YAAW,cAEiB,IAAzBH,EAAeR,WAClBI,EAAiB,GAAD,mBAAKjB,GAAL,CAAoBqB,MA6Ce/C,KAAM4B,EAAQX,UAAU,WAEzE,yBAAKA,UAAU,SACb,4HACA,wBAAIA,UAAU,cAEVS,GACAA,EAAcF,KAAI,SAAC2B,EAAMC,GAAP,OAChB,wBAAIlD,IAAKkD,GACND,EAAKrC,KACN,4BAAQW,QAAS,kBAnBZ,SAAC0B,GAClB,IAAME,EAAM3B,EAAc4B,WAAU,SAAAjC,GAAC,OAAI8B,EAAKlB,KAAOZ,EAAEY,MACvDP,EAAc6B,OAAOF,EAAI,GACzBV,EAAiB,YAAIjB,IAgBc8B,CAAWL,KAAlC,0BAKN,4BAAQ1B,QAhDK,SAACzB,GAEpB0B,EAAc+B,SAAQ,SAAAC,GACpBR,YAAW,WACTS,EAAwBD,KACL,IAAlBA,EAAQnB,WACXqB,EAAyBF,GACtBG,MAAK,WACJnB,GAAa,MAEdoB,OAAM,SAAAzC,GACL0C,QAAQC,IAAI3C,SAIlBsB,EAAiB,KAiCoB1B,UAAU,mBAAzC,c,QCuDKgD,EAjJO,WAAM,MAEoB1D,mBAAS,MAF7B,mBAEF2D,GAFE,aAGc3D,mBAAS,GAHvB,mBAGL4D,GAHK,aAIU5D,mBAAS,GAJnB,mBAInB6D,EAJmB,KAIPC,EAJO,OAKK9D,mBAAU,IAAIqC,MAAMC,MALzB,mBAKnByB,EALmB,aAMA/D,oBAAS,IANT,gCAUUgE,YAAQX,MAVlB,mBAUnBY,EAVmB,KAURC,EAVQ,KAUCC,EAVD,OAWHH,YAAQZ,KAAxBgB,EAXmB,oBAcpBC,EAAiB,SAAC1E,GACtB0D,EAAyB1D,GACtB2D,MAAK,WACJgB,OAEDf,OAAM,SAACzC,GACN0C,QAAQC,IAAI3C,OAKZyD,EAAS,SAACC,GACd,OAAIA,EAAM,GAAW,yBACd,2BAGTjC,qBAAU,WAKR,GAHAiB,QAAQC,IAAIQ,EAAUQ,OAAO,qBAC7BjB,QAAQC,IAAII,EAAW,cAEE,IAArBI,EAAUQ,UACVZ,GAAcI,EAAUQ,QAA5B,CACA,GAAIR,EAAUQ,OAAQ,EAAE,CACtBV,EAAWW,QACXX,EAAWY,YAAc,EACzB,IAAIC,EAAY,CAEdrB,MAAQ,IAAIsB,WAEbd,EAAWe,QAAUF,GAAWrB,OAAM,eAIzCO,EAAcG,EAAUQ,QAExBR,EAAUhD,KAAI,SAAC8D,EAAUlC,GACvB,IAAMD,EAAOmC,EAASC,MACtBrC,YAAW,WACT0B,EAAeU,EAASpF,OACR,IAAfiD,EAAKZ,iBAGT,CAACiC,EAAUI,IAId,IAAMC,EAAc,WAClBX,EAAmB,MACnBC,GAAiB,IA2BnB,OACE,yBAAKlD,UAAU,IACb,yBAAKA,UAAU,IACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACb,mGACCyD,GAAS,0CAAgBA,GACzBD,GAAW,4CACZ,wBAAIxD,UAAU,eACVwD,GACAD,GACAA,EAAUhD,KAAI,SAAC8D,EAAUlC,GAAX,OACZ,wBACAnC,UAAS,sCAAiC6D,EAASQ,EAASC,MAAMhD,WAAzD,KAAuFrC,IAAKkD,GAElGkC,EAASC,MAAMzE,WAM1B,yBAAKG,UAAU,SACb,oEACA,wBAAIA,UAAU,cACd,4BACEA,UAAU,4BACVQ,QArCmB,WACzBkC,IACGE,MAAK,WACJgB,OAEDf,OAAM,SAACzC,GACN0C,QAAQC,IAAI3C,QA6BZ,eAMEoD,GACEE,GACAA,EAAanD,KAAI,SAAC8D,EAAUlC,GAAX,OACf,wBACEnC,UAAS,sCAAiC6D,EAASQ,EAASC,MAAMhD,WAAzD,KACTrC,IAAKkD,GAEJkC,EAASC,MAAMzE,eC7FjB0E,MAjCf,WACE,OACE,6BACE,yBAAKvE,UAAU,4CACb,uBAAGwE,KAAK,aAAaxE,UAAU,iBAG/B,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMyE,GAAI,aAAczE,UAAU,YAAlC,mCAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMyE,GAAI,OAAQzE,UAAU,YAA5B,kDAMN,4BAAQA,UAAU,WAClB,yBAAKA,UAAU,+BACT,sKAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0E,OAAK,EAACC,KAAM,CAAC,IAAK,cAAeC,UAAW5B,IACnD,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,OAAOC,UAAW/D,OCvB1BgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEd7C,OAAM,SAAAY,GACLX,QAAQW,MAAMA,EAAMkC,c","file":"static/js/main.eb3ff61a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound.b1ec5d58.mp3\";","import * as firebase from \"firebase\";\nimport \"firebase/database\";\n\nlet config = {\n  apiKey: \"AIzaSyC38-KVYpwA1Mtu6k1OZBF5I1lsDzSOCbY\",\n  authDomain: \"mada-project-d60cb.firebaseapp.com\",\n  databaseURL: \"https://mada-project-d60cb-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"mada-project-d60cb\",\n  storageBucket: \"mada-project-d60cb.appspot.com\",\n  messagingSenderId: \"96511398940\",\n  appId: \"1:96511398940:web:f2696d7db14a3ec490bbd9\",\n  measurementId: \"G-K7P5K0W58C\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase.database();\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/citiestoalert\");\n\nconst getAll = () => {\n  return db;\n};\n\nconst create = (data) => {\n  return db.push(data);\n};\n\nconst update = (key, data) => {\n  return db.child(key).update(data);\n};\n\nconst remove = (key) => {\n  return db.child(key).remove();\n};\n\nconst removeById = (id) => {\n  return db.child(id).remove();\n};\n\n\nconst removeAll = () => {\n  return db.remove();\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n  removeAll,\n  removeById,\n};\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/citieswasalert\");\n\nconst getAll = () => {\n  return db;\n};\n\nconst create = (data) => {\n  return db.push(data);\n};\n\nconst update = (key, data) => {\n  return db.child(key).update(data);\n};\n\nconst remove = (key) => {\n  return db.child(key).remove();\n};\n\nconst removeAll = () => {\n  return db.remove();\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n  removeAll,\n};\n","import React, { useState ,useEffect } from \"react\";\n\nexport const Search = (props) => {\n  const [query, setQuery] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const filteredData = props.data.filter((item) =>\n    item.name.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const handleItemClick = (item) => {\n    setSelectedItem(item);\n    props.citiesToAlert(item)\n    // Do something with the selected item, like show it in a modal or send it to a server\n  };\n\n  return (\n    <div className=\"check\">\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"חיפוש\"\n      />\n         {/* {selectedItem && (\n        <div>\n          <h2>Selected item: {selectedItem.name}</h2>\n          <p>Zone: {selectedItem.zone}</p>\n          <p>Time: {selectedItem.time}</p>\n          <p>Coordinates: {selectedItem.lat}, {selectedItem.lng}</p>\n        </div>\n      )} */}\n      <ul>\n        {filteredData.map((item) => (\n          <li key={item.value} onClick={() => handleItemClick(item)}>\n            {item.name}\n          </li>\n        ))}\n      </ul>\n   \n    </div>\n  );\n};","import React, { useState ,useEffect} from \"react\";\nimport CitiesDataService from \"../services/CitiesService\";\nimport CitiesWasService from \"../services/CitiesWasAlertService\";\nimport { Search } from \"./search\";\nimport alarm from \"../assets/sound.mp3\"\nvar cities = require('../services/citiesArchive.json')\n\n\n\nconst AddTutorial = () => {\n  const initialTutorialState = {\n     key: null,\n    published: false,\n    id:\"\",\n    name: \"\",\n    name_en: \"\",\n    zone: \"\",\n    zone_en: \"\",\n    time: \"\",\n    time_en: \"\",\n    countdown: 0,\n    lat: 0,\n    lng: 0,\n    value: \"\"\n  };\n  const [tutorial, setTutorial] = useState(initialTutorialState);\n  const [submitted, setSubmitted] = useState(false);\n  const [citiesToAlert, setcitiesToAlert] = useState([]);\n  // const alarmAudio = new Audio(alarm);\n  const [alarmAudio, setAudio] = useState( new Audio(alarm) )\n\n  const handleMessageFromChild = (newCityToAlert) => {\n    newCityToAlert.id = Math.random(100000000)\n    // saveTutorial(newCityToAlert)\n    setTimeout(() => {\n      \n    }, newCityToAlert.countdown*1000);\n    setcitiesToAlert([...citiesToAlert, newCityToAlert]);\n  }\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setTutorial({ ...tutorial, [name]: value });\n  };\n\n  useEffect(() => {\n  \n  }, [citiesToAlert])\n  \n\n  const saveTutorial = (data) => {\n    \n    citiesToAlert.forEach(element => {\n      setTimeout(() => {\n        CitiesWasService.create(element)\n      }, element.countdown*1000);\n      CitiesDataService.create(element)\n        .then(() => {\n          setSubmitted(true);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n        \n    });\n    setcitiesToAlert([])\n  };\n  \n\n  const newTutorial = () => {\n    setTutorial(initialTutorialState);\n    setSubmitted(false);\n  };\n\n  const deleteCity = (city) => {\n    const idx = citiesToAlert.findIndex(e => city.id === e.id)\n    citiesToAlert.splice(idx,1)\n    setcitiesToAlert([...citiesToAlert])\n  }\n\n  return (\n    <div className=\"about\">\n      <div className=\"main2\">\n        <Search citiesToAlert={handleMessageFromChild} data={cities} className=\"main1\" />\n      </div>\n      <div className=\"main1\">\n        <h2>רשימת ערים להפעלה</h2>\n        <ul className=\"list-group\">\n        {\n            citiesToAlert &&\n            citiesToAlert.map((city, index) => (\n              <li key={index}>\n                {city.name}\n                <button onClick={() => deleteCity(city)}>מחק</button>\n\n                {/* tutorial.title */}\n              </li>\n            ))}\n          <button onClick={saveTutorial} className=\"btn btn-success\">\n            Submit\n          </button>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTutorial;\n","import React, { useState ,useEffect } from \"react\";\nimport { useList } from \"react-firebase-hooks/database\";\nimport CitiesDataService from \"../services/CitiesService\";\nimport CitiesWasService from \"../services/CitiesWasAlertService\";\nimport alarm from \"../assets/sound.mp3\"\nimport Tutorial from \"./Tutorial\";\n\nconst TutorialsList = () => {\n  // const [tutorials, setTutorials] = useState([]);\n  const [currentTutorial, setCurrentTutorial] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [checkIndex, setCheckIndex] = useState(0);\n  const [alarmAudio, setAudio] = useState( new Audio(alarm) )\n  const [isPlay, setPlay] = useState(false)\n  \n\n  /* use react-firebase-hooks */\n  const [tutorials, loading, error] = useList(CitiesDataService.getAll());\n  const [cityWasAlert] = useList(CitiesWasService.getAll());\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const deleteTutorial = (key) => {\n    CitiesDataService.remove(key)\n      .then(() => {\n        refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n\n  const getColor=(num)=>{\n    if (num < 31) return \"list-group-item-danger\"\n    return \"list-group-item-warning\"\n  }\n  \n  useEffect(() => {\n    // if (isMute) return\n    console.log(tutorials.length,\"tutorials.length,\");\n    console.log(checkIndex,\"checkIndex\");\n    // eslint-disable-next-line no-unused-expressions\n    if (tutorials.length === 0) return\n    if (checkIndex >= tutorials.length) return\n    if (tutorials.length >0){\n      alarmAudio.pause();\n      alarmAudio.currentTime = 0;\n      var nopromise = {\n        // eslint-disable-next-line no-new-func\n        catch : new Function()\n      };\n      (alarmAudio.play() || nopromise).catch(function(){}); ;\n    }\n      \n    \n    setCheckIndex(tutorials.length)\n    \n    tutorials.map((tutorial, index) => {\n      const city = tutorial.val()\n      setTimeout(() => {\n        deleteTutorial(tutorial.key)\n      }, city.countdown*1000);\n   })\n  \n  }, [tutorials,deleteTutorial])\n  \n\n\n  const refreshList = () => {\n    setCurrentTutorial(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveTutorial = (tutorial, index) => {\n    const { title, description, published } = tutorial.val(); /* tutorial */\n\n    setCurrentTutorial({\n      key: tutorial.key,\n      title,\n      description,\n      published,\n    });\n\n    setCurrentIndex(index);\n  };\n\n  const removeAllTutorials = () => {\n    CitiesWasService.removeAll()\n      .then(() => {\n        refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  \n\n  return (\n    <div className=\"\">\n      <div className=\"\">\n      <div className=\"about\">\n      <div className=\"main1\">\n        <h2>התרעות חדשות</h2>\n        {error && <strong>Error: {error}</strong>}\n        {loading && <span>Loading...</span>}\n        <ul className=\"list-group\">\n          {!loading &&\n            tutorials &&\n            tutorials.map((tutorial, index) => (\n              <li\n              className={`text-dark list-group-item \" ${getColor(tutorial.val().countdown)} `}                key={index}\n              >\n                {tutorial.val().name}\n                {/* tutorial.title */}\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div className=\"main2\">\n        <h2>ארכיון</h2>\n        <ul className=\"list-group\">\n        <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllTutorials}\n        >\n          Remove All\n        </button>\n        {!loading &&\n            cityWasAlert &&\n            cityWasAlert.map((tutorial, index) => (\n              <li\n                className={`text-dark list-group-item \" ${getColor(tutorial.val().countdown)} `}\n                key={index}\n              >\n                {tutorial.val().name}\n                {/* tutorial.title */}\n              </li>\n            ))}\n        </ul>\n      </div>\n\n    </div>\n\n        \n\n     \n      </div>\n      \n    </div>\n  );\n};\n\nexport default TutorialsList;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nimport AddTutorial from \"./components/AddTutorial\";\nimport TutorialsList from \"./components/TutorialsList\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/tutorials\" className=\"navbar-brand\">\n          \n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/tutorials\"} className=\"nav-link\">\n              אימון\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/add\"} className=\"nav-link\">\n              דף ניהול\n            </Link>\n          </li>\n        </div>\n      </nav>\n      <header className=\"header1\">\n      <div className=\"text-white header-container\">\n            <h2>מסך התרעות ירי טילים (ארצי)</h2>\n      </div>\n      </header>\n        <Switch>\n          <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n          <Route exact path=\"/add\" component={AddTutorial} />\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}